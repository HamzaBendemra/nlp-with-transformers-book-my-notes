# -*- coding: utf-8 -*-
"""01_introduction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Tp9DcPGHgdKJUDXYGh8aomf_mzBJYpIm
"""

# Commented out IPython magic to ensure Python compatibility.
# Uncomment and run this cell if you're on Colab or Kaggle
!git clone https://github.com/nlp-with-transformers/notebooks.git
# %cd notebooks
from install import *
install_requirements()

from utils import *
setup_chapter()

"""## Hugging Face Transformers: Bridging the Gap

## A Tour of Transformer Applications
"""

synthetic_review = """Dear Amazon, I recently purchased a set of wireless earbuds \
from your online store in the United States. However, upon receiving the package, \
I was disappointed to find that the earbuds were defective and would not charge. \
As someone who relies on quality audio equipment for work and leisure, this has \
been quite inconvenient. I kindly request a replacement for the defective product \
or a full refund. Attached are the necessary documents and proof of purchase. \
Looking forward to your prompt response. Sincerely, Alex."""

"""### Text Classification"""

from transformers import pipeline

classifier = pipeline(
    "text-classification",
)

import pandas as pd
pd.set_option("display.max_colwidth", None) # Display full text

outputs = classifier(synthetic_review)
pd.DataFrame(outputs)

"""### Named Entity Recognition"""

ner_tagger = pipeline("ner", aggregation_strategy="simple")
ner_outputs = ner_tagger(synthetic_review)
pd.DataFrame(ner_outputs)

"""### Question Answering"""

reader = pipeline("question-answering")
question = "What product was purchased?"
answer = reader(
    question=question,
    context=synthetic_review,
)
pd.DataFrame([answer])

question = "Who wrote the review?"
answer = reader(
    question=question,
    context=synthetic_review,
)
pd.DataFrame([answer])

question = "What does the customer want?"
answer = reader(
    question=question,
    context=synthetic_review,
)
pd.DataFrame([answer])

"""### Summarization"""

summarizer = pipeline("summarization")
summary = summarizer(
    synthetic_review,
    max_length=50,
    min_length=25,
    clean_up_tokenization_spaces=True,
)
pd.DataFrame(summary)

"""### Translation"""

translator = pipeline(
    "translation_en_to_fr",
    model="Helsinki-NLP/opus-mt-en-fr",
)
outputs = translator(
    synthetic_review,
    clean_up_tokenization_spaces=True,
    min_length=50,
)
pd.DataFrame(outputs)

"""### Text Generation"""

from transformers import set_seed
set_seed(7)

generator = pipeline(
    "text-generation",
    model="gpt2"
)
prompt = str(synthetic_review) + "\n\n Customer service response: \n Dear Alex, I am sorry to hear about your "
outputs = generator(
    prompt,
    max_length=200,
    truncation=True,
    num_return_sequences=1,
)
print(outputs[0]['generated_text'])

"""### The Hugging Face Hub

<img alt="hub-overview" width="1000" caption="The models page of the Hugging Face Hub, showing filters on the left and a list of models on the right." src="https://github.com/nlp-with-transformers/notebooks/blob/main/images/chapter01_hub-overview.png?raw=1" id="hub-overview"/>

<img alt="hub-model-card" width="1000" caption="A example model card from the Hugging Face Hub. The inference widget is shown on the right, where you can interact with the model." src="https://github.com/nlp-with-transformers/notebooks/blob/main/images/chapter01_hub-model-card.png?raw=1" id="hub-model-card"/>
"""

